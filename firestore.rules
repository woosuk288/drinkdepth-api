 rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

		function me(id) {
    	return request.auth.uid == id || request.auth.uid == 'kakao:'+id;
    }
  	function isSignedIn() {
      return request.auth != null;
    }

    function increment(current, next) {
    	return current + 1 == next
    }

    function decrement(current, next) {
    	return current - 1 == next
    }

    match /{document=**} {
      // drinkdepth o2o for cafe menu
      match /coupons/{entry} {
        allow read;
        allow create, update: if isSignedIn();
      }
			match /registers/{entry} {
        allow read;
        allow create;
        // allow write;
      }

    }

    match /cafes/{cafeId} {
    	allow read;

    	match /menus/{menuId} {
        function onlyContentChanged() {
          // Ensure that title and roles are unchanged and that no new
          // fields are added to the document.
          return request.resource.data.cafeId == resource.data.cafeId
            && request.resource.data.category == resource.data.category
            && request.resource.data.createdAt == resource.data.createdAt
            && request.resource.data.description == resource.data.description
            && request.resource.data.imageURL == resource.data.imageURL
            && request.resource.data.labels == resource.data.labels
            && request.resource.data.name == resource.data.name
            && request.resource.data.price == resource.data.price
            && request.resource.data.keys() == resource.data.keys();
        }

      	allow read;
        allow update: if isSignedIn() && onlyContentChanged() && increment(resource.data.reviewCount, request.resource.data.reviewCount);
      	allow update: if isSignedIn() && onlyContentChanged() && decrement(resource.data.reviewCount, request.resource.data.reviewCount);
        // development 이미지 수정시
        allow create, update: if request.auth.token.admin == true;

      	match /reviews/{reviewId} {
          allow get;
          allow list: if request.query.limit <= 15;
        	allow update, delete: if request.auth.uid == resource.data.uid;
        	allow create: if isSignedIn();
        }
      }
    }


    /* review */
    match /reviews/{reviewId} {
    	allow read: if isSignedIn();
      allow update, delete: if request.auth.uid == resource.data.profile.uid;
      allow create: if isSignedIn();
    }

    match /profiles/{profileId} {
    	allow read;
    	allow create, update: if me(profileId);
    }
    match /profiles/{profileId}/privacies/{docId} {
    	allow create, update: if (docId == 'flavor' || docId == 'keyword')
      	&& request.resource.data.get('names', []).size() > 0
        && me(profileId);
    }
    match /profiles/{profileId}/badges/{badgeId} {
      allow read;
      allow create, update: if me(profileId);
    }


  }
}